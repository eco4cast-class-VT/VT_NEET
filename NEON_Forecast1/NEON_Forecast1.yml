#####
#See https://shorturl.at/irMQW for a guide to all the options below
#NEON_Forecast1.yml
####
team_name: VT_NEETeam
# ids are optional except for the first author, who is also the 'contact'
team_list:
  - individualName:
      givenName: Tyler
      surName: Weiglein
      id: weiglein@vt.edu
  - individualName:
      givenName: Marcus
      surName: Taylor
      id: marcustaylor@vt.edu
  - individualName:
      givenName: Joshua
      surName: Rady
      id: https://orcid.org/0000-0002-7806-136X
metadata:
  forecast:
    timestep: 1 hour #time step of model
    forecast_horizon: 35 days #number of time steps in the future
#
    model_description:
      # model identifier:
      forecast_model_id: https://github.com/eco4cast-class-VT/VT_NEET/commit/e6c865d3cfde3106a0915831a9d47190e3c2c58e
      name: state-space
      type: process #General type of model empirical, machine learning, process
      repository: https://github.com/eco4cast-class-VT/VT_NEET #GitHub repository 
#
#Missing fields: metadata_standard_version, forecast_project_id
#
#INITIAL CONDITIONS      
#Uncertainty in the initialization of state variables (Y). Initial condition 
#uncertainty will be a common feature of any dynamic model, where the future 
#state depends on the current state, such as population models, process-based 
#biogeochemical pool & flux models, and classic time-series analysis. 
#
#complexity = number of state variables in the model. Examples of this would be the number of
#species in a community model, number of age/size classes in a population model, 
#number of pools in a biogeochemical model.
    initial_conditions:
      status: propagates #options: absent, present, data_driven, propagates, assimilates
      complexity: 1 #Temperature
      propagation:
        type: ensemble #How does your model propogate initial conditions (ensemble or MCMC is most common)
        size: 1000 #ensemble_size
      assimilation:
        type: refit #description of assimilation method
        reference: "NA" #reference for assimilation method
        complexity: 1 #Temperature
#        
#DRIVERS
#uncertainty in model drivers, covariates, and exogenous scenarios (X). 
#Driver/covariate uncertainties may come directly from a data product, as a 
#reported error estimate or through driver ensembles, or may be estimated based 
#on sampling theory, cal/val documents, or some other source.
#
#complexity = Number of different driver variables or covariates in a model. For example, in 
#a multiple regression this would be the number of X’s. For a climate-driven 
#model, this would be the number of climate inputs (temperature, precip, solar 
#radiation, etc.).
    drivers:
      status: present
      complexity: 1 #Temperature (Note: This line had improper indenting in the template.)
      propagation:
        type: ensemble
        size: 30 #NOAA GEFS ensemble
      assimilation:
        type: refit
        reference: "NA"
        complexity: 1 #Temperature
#        
#PARAMETERS
#Uncertainty in model parameters (). For most ecological processes the parameters
#(a.k.a. coefficients) in model equations are not physical constants but need to 
#be estimated from data. 
#
#complexity = number of estimated parameters/coefficients in a model at a single point in 
#space/time. For example, in a regression it would be the number of beta’s.
    parameters:
      status: present
      complexity: 2 #b1, sd_add
      propagation:
        type: ensemble
        size: 11000 #niter
      assimilation:
        type: refit
        reference: "NA"
        complexity: 2 #b1, sd_add
#
#RANDOM EFFECTS
#Unexplained variability and heterogeneity in model parameters (). Hierarchical 
#models, random effect models, and meta transfer learning approaches all attempt
#to acknowledge that the ‘best’ model parameters may change across space, time, 
#individual, or other measurement unit.

#complexity = number of random effect terms, which should be equivalent to the number of 
#random effect variances estimated. For example, if you had a hierarchical 
#univariate regression with a random intercept you would have two parameters 
#(slope and intercept) and one random effect (intercept). At the moment, we are 
#not recording the number of distinct observation units that the model was 
#calibrated from. So, in our random intercept regression example, if this model 
#was fit at 50 sites to be able to estimate the random intercept variance, that 
#would affect the uncertainty about the mean and variance but that ‘50’ would 
#not be part of the complexity dimensions.
#
    random_effects:
      status: absent
      complexity: "NA" #Not srue if NA is the proper value for the follow fields:
      propagation:
        type: "NA"
        size: "NA"
      assimilation:
        type: "NA"
        reference: "NA"
        complexity: "NA"
#
#PROCESS ERROR
#Dynamic uncertainty in the process model () attributable to both model 
#misspecification and stochasticity. Pragmatically, this is the portion of the 
#residual error from one timestep to the next that is not attributable to any of
#the other uncertainties listed above, and which typically propagates into the future. 
#
#complexity =  dimension of the error covariance matrix. So if we had a n x n 
#covariance matrix, n is the value entered for <complexity>. Typically n should 
#match the dimensionality of the initial_conditions unless there are state 
#variables where process error is not being estimated or propagated
    process_error:
      status: assimilates
      complexity: 1 #NEE
      propagation:
        type: ensemble
        size: 1000 #ensemble_size
      assimilation:
        type: refit
        reference: "NA"
        complexity: 1 #NEE
        covariance: "NA" #TRUE OR FALSE ?????
        localization: "NA" #Should we leave this blank?
#
#OBSERVATION ERROR
#Uncertainty in the observations of the output variables (g). Note that many 
#statistical modeling approaches do not formally partition errors in observations
#from errors in the modeling process, but simply lump these into a residual error. 
#Because of this we make the pragmatic distinction and ask that residual errors 
#that a forecast model do not directly propagate into the future be recorded as 
#observation errors. Observation errors now may indeed affect the initial condition 
#uncertainty in the next forecast, but we consider this to be indirect. 
#
#complexity = dimension of the error covariance matrix. So if we had a n x n 
#covariance matrix, n is the value entered for <complexity>. Typically n should 
#match the dimensionality of the initial_conditions unless there are state 
#variables where process error is not being estimated or propagated
    obs_error:
      status: present
      complexity: 1 #NEE
      propagation:
        type: ensemble
        size: 1000 #ensemble_size
      assimilation:
        type: refit
        reference: "NA"
        complexity: 1 #NEE
        covariance: "NA" #?????
        localization: "NA" #Should we leave this blank?
